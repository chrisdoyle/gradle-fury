description = '[ c h r i s d o y l e ] :: Gradle Fury :: Hello World Java Library (JAR)'

apply plugin: 'java'


//not mandatory, we use these plugins to exercise the site plugin
apply plugin: 'findbugs'
apply plugin: "jacoco"



compileJava {
    sourceCompatibility = "${project.property('compileJava.sourceCompatibility')}"
    targetCompatibility = "${project.property('compileJava.targetCompatibility')}"
}

dependencies {
    compile "org.apache.commons:commons-lang3:${project.property('commons-lang3.version')}"

    //since gradle 2.12, similar to maven "provided"
    compileOnly "commons-io:commons-io:${project.property('commons-io.version')}"


    testCompile "junit:junit:${project.property('junit.version')}"
}






/*******************************************************/
/*******************************************************/
// more reporting stuff, not required but we use it to exercise the site plugin
/*******************************************************/
/*******************************************************/

//gradlew check or findbugsMain should fire off findbugs

tasks.withType(FindBugs) {
    reports {
        xml.enabled = false
        html.enabled = true
        //html.stylesheet resources.text.fromFile('config/xsl/findbugs-custom.xsl')
    }
}

test {
    jacoco{
        append = false
    }
}

jacocoTestReport {
    dependsOn test
    description = "Generate Jacoco coverage reports after running tests."
    reports {
        xml.enabled true
        html.enabled true
    }
    classDirectories = fileTree(dir: 'build/classes/main', include: '**')
    sourceDirectories = fileTree(dir: 'scr/main/java', include: '**')
}
/*******************************************************/
/*******************************************************/
// END more reporting stuff, not required but we use it to exercise the site plugin
/*******************************************************/
/*******************************************************/