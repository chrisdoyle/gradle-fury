language: android
jdk: oraclejdk7
android:
  components:
    # The BuildTools version used by your project
    - tools
    - platform-tools
    - build-tools-23.0.2 # 23.0.2 was not available on build
    - build-tools-23.0.1
    - build-tools-23.0.3
    # The SDK version used to compile your project
    - android-23
    - android-19

    # Additional components
    - extra-google-google_play_services
    - extra-google-m2repository
    - extra-android-m2repository
    - addon-google_apis-google-19
    - addon-google_apis-google-23
env:
  matrix:
    # default out of the box set
    - GRADLE_VERSION='3.0' GRADLE_PLUGIN_VERSION='2.1.3'
    - GRADLE_VERSION='2.14' GRADLE_PLUGIN_VERSION='2.1.3'
    - GRADLE_VERSION='2.10' GRADLE_PLUGIN_VERSION='2.1.2'
    - GRADLE_VERSION='2.14' GRADLE_PLUGIN_VERSION='2.1.0'
    - GRADLE_VERSION='2.14' GRADLE_PLUGIN_VERSION='2.0.0'
    - GRADLE_VERSION='2.2.1' GRADLE_PLUGIN_VERSION='1.5.0'
    - GRADLE_VERSION='2.2.1' GRADLE_PLUGIN_VERSION='1.3.1'
    - GRADLE_VERSION='2.2.1' GRADLE_PLUGIN_VERSION='1.3.0'

    #- GRADLE_VERSION='2.9' GRADLE_PLUGIN_VERSION='1.3.1'
    #- GRADLE_VERSION='2.4' GRADLE_PLUGIN_VERSION='1.3.1'
    #- GRADLE_VERSION='2.6' GRADLE_PLUGIN_VERSION='1.3.1'
    #- GRADLE_VERSION='2.8' GRADLE_PLUGIN_VERSION='1.3.1'

    #- GRADLE_VERSION='2.14.1' GRADLE_PLUGIN_VERSION='2.1.3'
    #- GRADLE_VERSION='2.10' GRADLE_PLUGIN_VERSION='2.0.0'
    #- GRADLE_VERSION='2.11' GRADLE_PLUGIN_VERSION='2.0.0'
    #- GRADLE_VERSION='2.12' GRADLE_PLUGIN_VERSION='2.0.0'
    #- GRADLE_VERSION='2.13' GRADLE_PLUGIN_VERSION='2.0.0'
    #
    #- GRADLE_VERSION='2.11' GRADLE_PLUGIN_VERSION='2.1.2'
    #- GRADLE_VERSION='2.12' GRADLE_PLUGIN_VERSION='2.1.2'
    #- GRADLE_VERSION='2.13' GRADLE_PLUGIN_VERSION='2.1.2'

sudo: required


before_script:
 - sudo apt-get install gnupg2
 - sudo apt-get install rng-tools gnupg-agent pinentry-curses
 #- sudo echo EXTRAOPTIONS=\"-r /dev/random\" >> /etc/conf.d/rngd
 - export RNGD_OPTS="-o /dev/random -r /dev/urandom"
 #- sudo mknod /dev/hwrng c 10 183
 #- ls /dev | grep hwrng
 #- sudo rngd -f
 #- sudo service rngd start
 #setup gpg first
 - which gpg
 - gpg --version
 - gpg --help
 #generate a bonus gpg key for signing
 - gpg --verbose --batch --gen-key ci/gpginput.txt &
 - gpg --list-keys

 - chmod 755 ci/*.sh

 #setup the maven android sdk stuff
 #- mkdir temp
 #- cd temp
 #- git clone https://github.com/simpligility/maven-android-sdk-deployer
 #- cd maven-android-sdk-deployer
 # -q quite, log level to warn
 # -B batch mode
 # -fn fail never
 # -U force repo updates
 #- mvn clean install -fn -B -U
 #- cd ..
 #- cd ..

#build
script:

  #setup the username/passwords for nexus defaults
  - ci/configure.sh
  - ./gradlew generateMasterKey
  - ./gradlew encryptPassword -Ppassword=admin123 -PstoreField=NEXUS_PASSWORD
  - ./gradlew encryptPassword -Ppassword=abc -PstoreField=GPG_PASSPHRASE

  #build using gradle
  - ./gradlew -version
  - ./gradlew clean install -Pprofile=sources,javadoc
  #verify publish
  - ci/verify.sh

  # ok let's blow up the local maven repo
  - rm -rf ~/.m2/
  # build again with signatures, then verify the signatures
  - ./gradlew clean
  - ./gradlew install -Pprofile=sources,javadoc
  - ci/verify.sh



  #setup nexus, should this be moved to before script?
  - wget http://download.sonatype.com/nexus/oss/nexus-2.13.0-01-bundle.zip
  - unzip nexus-2.13.0-01-bundle.zip
  - cd nexus-2.13.0-01/bin
  - pwd
  - chmod 755 nexus
  - ./nexus start &
  - pwd
  - cd ..
  - cd ..
  - pwd
  -

  # wait for nexus
  - ci//waitForNexus.sh

  # build with signatures and publish
  - ./gradlew publishArtifacts -Pprofile=sources,javadoc,sign -i
  - ci/verifyNoSignatures.sh

  # build with signatures and publish
  - ./gradlew publishArtifacts -Pprofile=sources,javadoc,sign -i
  # verify correctness
  - ci/verifySignatures.sh

  #stop nexus
  - cd nexus-2.13.0-01/bin
  - ./nexus stop
  - cd ..
  - cd ..



  # by this point, we've verified everything gradle related is working
  # now let's build some it projects to confirm stuff is working and dependencies are resolved
  - cd it
  - cd GradleConsumers
  - ./gradlew build
  - cd ..
  - cd MavenConsumers
  #build using maven with integration tests
  #we build 3 times due to issues with the maven-android-plugin. root cause is unknown but seems to be related to how artifacts are resolved for android projects
  #in case you're wondering -fn means fail never, which loosely means, if the build fails, the exit code is always 0, which is basically all CI engines look for.

  #commented out because of maven-android issues on travis, but it does work on my local machine
  #- mvn install -fn -U
  #- mvn install -fn -U
  #- mvn install -U