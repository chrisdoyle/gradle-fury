language: android
jdk: oraclejdk7
android:
  components:
    # The BuildTools version used by your project
    - tools
    - platform-tools
    - build-tools-23.0.2 # 23.0.2 was not available on build
    - build-tools-23.0.1
    - build-tools-23.0.3
    # The SDK version used to compile your project
    - android-23

    # Additional components
    - extra-google-google_play_services
    - extra-google-m2repository
    - extra-android-m2repository
    - addon-google_apis-google-19

sudo: required

# fun fact, travis doesn't really support multiple AVDs running currently for a single build (tried it, build timed out constantly while starting up the AVDs)
# thus we're using a build matrix (which makes more sense anyhow)
env:
    global:
    #minutes (2 minutes by default), prevents CommandShellUnresponsiveExceptions
    #- ADB_INSTALL_TIMEOUT=14

before_script:

  - chmod 755 ci/*.sh
  - mkdir temp
  - cd temp
  - git clone https://github.com/simpligility/maven-android-sdk-deployer
  - cd maven-android-sdk-deployer
  - mvn clean install -fn -B -U
  - cd ..
  - cd ..

#build
script:
  #build using gradle
  - ./gradlew -version
  - ./gradlew clean install -Pprofile=sources,javadoc
  #verify publish
  - chmod 755 verify.sh
  - ./verify.sh

  # ok let's blow up the local maven repo
  - rm -rf ~/.m2/
  # build again with signatures, then verify the signatures
  - ./gradlew clean
  - ./gradlew install -Pprofile=sources,javadoc
  - chmod 755 verify.sh
  - ./verify.sh
  #- wget http://download.sonatype.com/nexus/oss/nexus-2.13.0-01-bundle.zip
  #- unzip nexus-2.13.0-01-bundle.zip
  #- cd nexus-2.13.0-01-bundle/nexus-2.13.0-01/bin
  #- chmod 755 nexus
  #- nexus &
  #- cd ..
  #- cd ..
  #- cd ..

  #- ./gradlew publishArtifacts -Pprofile=sources,javadoc,sign
  #- chmod 755 verifySignatures.sh
  #- ./verifySignatures.sh



  # by this point, we've verified everything gradle related is working
  # now let's build some it projects to confirm stuff is working and dependencies are resolved
  - cd it
  - cd GradleConsumers
  - ./gradlew build
  - cd ..
  - cd MavenConsumers
  #build using maven with integration tests
  #we build 3 times due to issues with the maven-android-plugin. root cause is unknown but seems to be related to how artifacts are resolved for android projects
  #in case you're wondering -fn means fail never, which loosely means, if the build fails, the exit code is always 0, which is basically all CI engines look for.
  - mvn install -fn
  - mvn install -fn
  - mvn install