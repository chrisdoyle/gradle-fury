# Gradle build environment properties --------------------------------------------------------------

# From the Gradle documentation, "Chapter 20. The Build Environment":
#
# "Enables new incubating mode that makes Gradle selective when configuring projects.  Only relevant
#  projects are configured which results in faster builds for large multi-projects."
org.gradle.configureondemand true

# "Specifies the jvmargs used for the daemon process.  The setting is particularly useful for
#  tweaking memory settings.  At the moment, the default settings are pretty generous with regards
#  to memory."
org.gradle.jvmargs=-Xms256m -Xmx1024m


# Dependency version configurations ----------------------------------------------------------------
#
# NOTE: I intentionally chose to use the all.lower.with.periods versus ALL_CAPS_WITH_UNDERSCORES
# naming convention for several reasons:
#
#       - This naming convention is consistent with that which I'd expect to use in build scripts,
#         you know, like the convention used when defining properties in Maven POMs. ;-P
#
#       - Doing so forces the consumption of the value using the full syntax, which in my opinion
#         provides clarity:
#
#               e.g. ${project.property('foo-dependency-name.version')}
#
#       - Okay, I'll admit it: I generally dislike the ALL_CAPS_WITH_UNDERSCORES convention.  I only
#         ever use them in Java code constants, database object names, and in environment variables
#         (which is precisely why I left the Nexus and Repository URL properties alone below).
#
#       - I strongly encourage spirited team-wide discussions on the subject, and hope that the
#         output is captured and documented on a coding standards wiki page, and enforced by a style
#         plugin and by visual inspection during code reviews.
#
#   --Doyle
#
# --------------------------------------------------------------------------------------------------

android-plugin.version=2.1.0
android-support.version=23.3.0
commons-lang3.version=3.4
commons-io.version=2.5
commons-cli.version=1.3
jsoup.version=1.9.2
junit.version=4.12


# Maven Repository (i.e. Sonatype Nexus Repository Manager) Configuration --------------------------

NEXUS_USERNAME=
NEXUS_PASSWORD=

RELEASE_REPOSITORY_URL=
SNAPSHOT_REPOSITORY_URL=


# Upgrade NDK Integration to leverage experimental plugin ------------------------------------------
#
# FAILURE: Build failed with an exception.
#
# * Where:
# Build file '/path/to/project/with/ndk/stuff/build.gradle' line: 999
#
# * What went wrong:
# A problem occurred evaluating project ':ndk-project'.
# > Error: NDK integration is deprecated in the current plugin.  Consider trying the new
#   experimental plugin.  For details, see
#   http://tools.android.com/tech-docs/new-build-system/gradle-experimental.  Set
#   "android.useDeprecatedNdk=true" in gradle.properties to continue using the current NDK
#   integration.
#
android.useDeprecatedNdk=true


# Java Configuration -------------------------------------------------------------------------------

compileJava.sourceCompatibility=1.7
compileJava.targetCompatibility=1.7

# Oh, Gradle...
# I would ideally love to replace the compileJava.[source|target]Compatibility properties with
# the JavaVersion.VERSION_1_7 constant value, but newer "improved" versions of Gradle bomb with:
#
#     Execution failed for task ':hello-world-lib:compileJava'.
#     > invalid source release: JavaVersion.VERSION_1_7
#
#compileJava.sourceCompatibility=JavaVersion.VERSION_1_7
#compileJava.targetCompatibility=JavaVersion.VERSION_1_7


# Android Configuration (used by gradle/android-support.gradle) ------------------------------------

android.buildToolsVersion=23.0.3
android.compileSdkVersion=23
android.minSdkVersion=15
android.targetSdkVersion=23

android.versionCode=1090

# this is used for signing APK only
android.signingConfigs.release.storeFile=../keystore.jks
android.signingConfigs.release.storePassword=password
android.signingConfigs.release.keyAlias=GradleFury
android.signingConfigs.release.keyPassword=password

# this is used for creating signature files for jar's  and whatnot
# required for maven central/sonatype repos

# Path to the gpg executable, default is unix default to /usr/local/bin/gpg
# GPG_PATH=/absolute/path/to/gpg.exe

# The passphrase is used on OS's with GPG implementations that cannot prompt for a password
# GPG_PASSPHRASE

# Maven POM Configuration (used by maven-publish in gradle/maven-support.gradle) -------------------

description=[ c h r i s d o y l e ] :: Gradle Fury

# NOTE: this is also used as the default project.version

## ATTN Gradle Fury develp[ers, in order to get Travis CI happy, when updating the version, also update the verify.sh script
## All other users ignore previous comment
pom.version=1.0.9-SNAPSHOT

# NOTE: this is also used as the default project.group
pom.groupId=com.chrisdoyle

pom.url=http://chrisdoyle.github.io/gradle-fury/
pom.inceptionYear=2016

pom.licenses.license.0.name=The Apache Software License, Version 2.0
pom.licenses.license.0.url=http://www.apache.org/licenses/
pom.licenses.license.0.distribution=

# Pro tip: don't use special symbols that interfere with XML parsing in any of the pom settings
# like any of the following ' " < >

pom.organization.name=[ c h r i s d o y l e ]
pom.organization.url=http://chrisdoyle.com/

pom.issueManagement.system=GitHub
pom.issueManagement.url=https://github.com/chrisdoyle/gradle-fury/issues

pom.ciManagement.system=
pom.ciManagement.url=

pom.scm.url=https://github.com/chrisdoyle/gradle-fury
pom.scm.connection=https://github.com/chrisdoyle/gradle-fury.git
pom.scm.developerConnection=https://github.com/chrisdoyle/gradle-fury.git

pom.distributionManagement.site.id=
pom.distributionManagement.site.url=

# developer list

pom.developers.developer.0.id=chrisdoyle
pom.developers.developer.0.name=Chris Doyle
pom.developers.developer.0.email=chris@chrisdoyle.com
pom.developers.developer.0.organization=[ c h r i s d o y l e ]
pom.developers.developer.0.role.0=Software Engineer
